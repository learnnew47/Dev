pipeline {
    agent any
    tools {
        maven 'localmaven'
    }
    stages {
        stage('Build maven') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[credentialsId: 'GIT_Creds', url: 'https://github.com/BhagyashreeBS25/Assignment1.git']]])
                sh 'mvn -f my-app/pom.xml -Dmaven.test.failure.ignore=true clean package'
                
            }
            

            post {
                success {
                    echo "Now Archiving the Artifacts...."
                    archiveArtifacts artifacts: '**/*.jar'
                }
            }
        }
       
        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('SonarQube_Server') { 
      
                    sh 'mvn sonar:sonar'
                }
            }
       }
        
        stage('Build Docker Image') {
            steps {
                script {
                    sh 'docker build -t bhagyshree25/hello-world-1.0 ./my-app'
                }
            }
        }
        
        stage('push docker image'){
            steps {
                script {
                    withCredentials([string(credentialsId: 'dockerhub_cred', variable: 'dockerhub_creds')]) {
                        sh 'docker login -u bhagyshree25 -p ${dockerhub_creds}'
                        sh 'docker push bhagyshree25/hello-world-1.0'
                    }
                }
            }
        }
    }
}
